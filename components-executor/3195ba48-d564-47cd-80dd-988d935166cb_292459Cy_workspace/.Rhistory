?delete_edges
?Reduce
Reduce(1:10, ´+´)
Reduce(1:10, add)
Reduce(1:10, (+))
Reduce(1:10, +)
Reduce(1:10, `+`)
Reduce(`+`, 1:10)
Reduce(`+`, 1:10, 0)
NULL +2
Reduce(`+`, 1:5, 0)
Reduce(`+`, 1:5)
require(igraph)
g <- barabasi.game(1000, 5)
mean(g)
mean(degree(g))
g <- barabasi.game(1000, m=5)
mean(degree(g))
sd(degree(g))
degree(g)[sample(1:1000, 1)]
degree(g)[sample(1:1000, 10)]
mean(degree(g)[sample(1:1000, 10)])
mean(degree(g)[sample(1:1000, 100)])
g <- barabasi.game(10000, m=5)
mean(degree(g)[sample(1:10000, 1000)])
g <- barabasi.game(1000, m=5)
g2 <- delete.vertices(g, sample(1:1000, 500))
mean(degree(g2))
g2 <- delete.vertices(g, sample(1:1000, 500))
mean(degree(g2))
g2 <- delete.vertices(g, sample(1:1000, 500))
mean(degree(g2))
g <- barabasi.game(10000, m=5)
g2 <- delete.vertices(g, sample(1:10000, 5000))
mean(degree(g2))
g2 <- delete.vertices(g, sample(1:10000, 10))
mean(degree(g2))
g2 <- delete.vertices(g, sample(1:10000, 100))
mean(degree(g2))
g2 <- delete.vertices(g, sample(1:10000, 1000))
mean(degree(g2))
g2 <- delete.vertices(g, sample(1:10000, 1000))
mean(degree(g2))
source('~/.active-rstudio-document', echo=TRUE)
debugSource('~/testscript.R', echo=TRUE)
Reduce(mergeGraphs, graphs, graph.empty())
Map(print, graphs)
as.vector(graphs)
unlist(graphs)
vcount(g2)
vcount(g)
dens <- function(g) {2*ecount(g) / (vcount(g) * (vcount(g) - 1))}
dens(g2)
dens(delete.vertices(g2, sample(1:9000, 4500)))
dens(delete.vertices(g2, sample(1:9000, 4500)))
dens(delete.vertices(g2, sample(1:9000, 4500)))
dens(delete.vertices(g2, sample(1:9000, 4500)))
dens(delete.vertices(g2, sample(1:9000, 500)))
dens(delete.vertices(g2, sample(1:9000, 5000)))
dens(delete.vertices(g2, sample(1:9000, 5000)))
dens(delete.vertices(g2, sample(1:9000, 5000)))
dens(delete.vertices(g2, sample(1:9000, 5000)))
debugSource('~/testscript.R', echo=TRUE)
debugSource('~/testscript.R', echo=TRUE)
graphs[[1]]
graphs[1]
debugSource('~/testscript.R', echo=TRUE)
graphs
debugSource('~/testscript.R', echo=TRUE)
graphs
g
source('~/testscript.R', echo=TRUE)
debugSource('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
debugSource('~/testscript.R', echo=TRUE)
head(edgeDf1)
nodeDf1 <- as_data_frame(g1, what="vertices")
V(g1)
length(unique(V(g1)$name))
vcount(g1)
which(table(V(g1)$label) > 1)
which(table(V(g2)$label) > 1)
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
debugSource('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
l <- list(a=1,b="a,b,c",c=4,d="abs")
l
as.data.frame(l)
source('~/testscript.R', echo=TRUE)
debugSource('~/testscript.R', echo=TRUE)
head(nodes)
nodes[7:15,]
debugSource('~/testscript.R', echo=TRUE)
head(subdata)
subdata$label
head(nodeData)
unique(nodeData$label)
subdata
nrow(nodeData)
subdata
nodeData
unique(nodeData$label)
subdata
subdata
subdata
subdata
debugSource('~/testscript.R', echo=TRUE)
unique(nodes$label)
nrow(nodes)
length(unique(nodes$label))
debugSource('~/testscript.R', echo=TRUE)
nrow(nodes)
length(unique(nodes$name))
length(unique(nodes$label))
head(nodes)
?graph_from_data_frame
d1 <- data.frame(a=3,b=6,c=3)
d2 <- data.frame(a=3,b=4)
merge(d1,d2, all=TRUE)
sum(merge(d1,d2, all=TRUE)$c)
sum(merge(d1,d2, all=TRUE)$c, na.rm = TRUE)
?set_vertex_attr
debugSource('~/testscript.R', echo=TRUE)
head(nodes)
names(d1)
?reorder
source('~/testscript.R', echo=TRUE)
graphs
source('~/testscript.R', echo=TRUE)
debugSource('~/testscript.R', echo=TRUE)
g1
V(g1)$label
V(g2)$label
V(g2)$label
V(g1)$label
g1
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
source('~/testscript.R', echo=TRUE)
g <- read.graph("merged_graph.gml","gml")
